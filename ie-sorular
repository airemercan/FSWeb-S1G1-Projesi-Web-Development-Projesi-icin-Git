# Araştırma Soruları

Artık yeni iş yerindeki ilk görevini gerçekleştirmek için hazırsın! Kullandığımız araçları biraz daha iyi anlama zamanı. Yapman istenilen şey, bu dokümanı güncelleyerek, aşağıdaki soruları soruları cevaplaman. Böylece Git yapısına biraz daha aşina olmaya başlayacaksın.

Soruları cevaplarken takıldığın yerlerde [GitHub docs](https://docs.github.com/en)'u kullanabilirsin. Docs, (ingilizce documentation'ın kısaltılmış halidir) bir programı veya dilin nasıl kullanılacağını anlatan dokümandır. Yazılım dünyasında sıkça kullanılır. Bir yazılımcı olarak _zamanınızın büyük çoğunluğu da bu tarz dokümanları okumakla ve üzerinde çalışmakla geçecek_.

![READ THE DOCS](https://github.com/Workintech/FSWeb-S1G1-Projesi-Web-Development-Projesi-icin-Git/blob/main/read-the-docs-wit.gif?raw=true)

Eğer aradığın soruların cevapları GitHub docs'ta yoksa, Google'lama becerileriniz size yardımcı olacak. Google'ı iyi kullanabilmek de aslında büyük bir dikkat ve çalışma gerektiriyor. Zamanla bu konuda da daha iyileştiğini göreceksin :)

## Sorular

1. Git nedir?
Git, dağıtılmış bir versiyon kontrol sistemi olan ve yazılım geliştirme projelerinde kullanılan özgür ve açık kaynaklı bir yazılımdır.
2. Git ile GitHub arasında ne fark var?
Git, dağıtılmış bir versiyon kontrol sistemi iken GitHub, Git tabanlı projelerin barındırıldığı, işbirliği yapıldığı ve paylaşıldığı bir bulut tabanlı platformdur.
3. Neden bir branch oluşturuyoruz?
Branch oluşturulması, aynı projenin farklı versiyonlarının veya özelliklerinin geliştirilmesini ayrı ayrı takip etmek ve denemek için kullanılır.
4. Pull Request'in amacı nedir?
Pull request, kaynak kod deposundaki bir branch'in ana branch'e (genellikle "master" veya "main") entegrasyonu için değişiklikleri tartışmak, incelemek ve birleştirmek amacıyla kullanılan bir mekanizmadır.
5. Bir Branchten diğerine geçmek için kullandığın KOMUT nedir? Mesela `isim-soyisim` branch'inde çalıştığını hayal et ve main branch'ine geçmek istiyorsun, ne yaparsın?
6. `git fetch`, `git merge` ve `git pull` arasındaki farklıarı açıklayınız. Bu konutlar ne yapar açıklayınız.
'git fetch uzak depodan değişiklikleri getirir, git merge değişiklikleri birleştirirken, git pull ise uzak depodan değişiklikleri alır ve yerel branch'e birleştirir.
7. Merge conflict nedir?
Merge conflict, farklı branch'lerde aynı dosyanın aynı satırında yapılan çelişkili değişiklikler nedeniyle otomatik birleştirme işlemi yapılamadığında ortaya çıkan durumdur.
8. Merge conflict'i nasıl çözeriz?
Merge conflict'i çözmek için conflict yaşanan dosyaları düzenleyip değişiklikleri kaydederek, ardından commit ederek ve ana branch'e birleştirerek çözüm sağlanabilir.

